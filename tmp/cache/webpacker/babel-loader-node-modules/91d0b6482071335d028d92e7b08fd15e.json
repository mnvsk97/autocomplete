{"ast":null,"code":"var _jsxFileName = \"/Users/krishna/rails-with-react/app/javascript/components/AutoComplete.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport './../Autocomplete.css';\n\nvar Autocomplete =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autocomplete, _Component);\n\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).call(this, props));\n\n    _this.onTextChange = function (e) {\n      var input = e.target.value;\n      var suggestions = [];\n      var players = _this.state.players;\n\n      if (input.length > 0) {\n        var regex = new RegExp(\"^\".concat(input), 'i');\n        suggestions = players.sort().filter(function (v) {\n          return regex.test(v);\n        });\n      }\n\n      _this.setState({\n        suggestions: suggestions,\n        text: input\n      });\n    };\n\n    _this.suggestionSelected = function (value) {\n      var suggestionSelected = _this.state.suggestionSelected;\n\n      _this.setState(function () {\n        return {\n          text: value,\n          suggestions: [],\n          suggestionSelected: !suggestionSelected\n        };\n      });\n    };\n\n    _this.renderSuggestions = function () {\n      var suggestions = _this.state.suggestions;\n\n      if (suggestions.length === 0) {\n        if (_this.state.text && _this.state.text.length > 0 && !_this.state.suggestionSelected) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"No Suggestions Found!\");\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, suggestions.map(function (suggestion) {\n        return React.createElement(\"li\", {\n          onClick: function onClick() {\n            return _this.suggestionSelected(suggestion);\n          },\n          key: suggestion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, suggestion);\n      }));\n    };\n\n    _this.state = {\n      suggestions: [],\n      text: '',\n      players: [],\n      suggestionSelected: false\n    };\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api/posts').then(function (response) {\n        _this2.setState({\n          players: response.data.players\n        });\n      });\n      var players = this.state.players;\n      console.log(players);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = this.state.text;\n      return React.createElement(\"div\", {\n        className: \"Autocomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: text,\n        onChange: this.onTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), this.renderSuggestions());\n    }\n  }]);\n\n  return Autocomplete;\n}(Component);\n\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/krishna/rails-with-react/app/javascript/components/AutoComplete.js"],"names":["React","Component","Fragment","axios","Autocomplete","props","onTextChange","e","input","target","value","suggestions","players","state","length","regex","RegExp","sort","filter","v","test","setState","text","suggestionSelected","renderSuggestions","map","suggestion","get","then","response","data","console","log"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport './../Autocomplete.css';\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: [],\n      text: '',\n      players: [],\n      suggestionSelected: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/posts').then(response => {\n      this.setState({ players: response.data.players });\n    });\n    const { players } = this.state;\n    console.log(players);\n  }\n\n  onTextChange = e => {\n    const input = e.target.value;\n    let suggestions = [];\n    const { players } = this.state;\n    if (input.length > 0) {\n      const regex = new RegExp(`^${input}`, 'i');\n      suggestions = players.sort().filter(v => regex.test(v));\n    }\n    this.setState({\n      suggestions: suggestions,\n      text: input\n    });\n  };\n\n  suggestionSelected = value => {\n    const {suggestionSelected} = this.state;\n    this.setState(() => ({\n      text: value,\n      suggestions: [],\n      suggestionSelected: !suggestionSelected\n    }));\n  };\n\n  renderSuggestions = () => {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      if (this.state.text && this.state.text.length > 0 && !this.state.suggestionSelected)\n        return <p>No Suggestions Found!</p>;\n    }\n    return (\n      <ul>\n        {suggestions.map(suggestion => (\n          <li\n            onClick={() => this.suggestionSelected(suggestion)}\n            key={suggestion}\n          >\n            {suggestion}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"Autocomplete\">\n        <input value={text} onChange={this.onTextChange} />\n        {this.renderSuggestions()}\n        {/* {this.renderPosts()} */}\n      </div>\n    );\n  }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}